//
// TextsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import RxSwift


open class TextsAPI {
    
    private let clientApi : SwaggerClientAPI
    
    init(clientApi : SwaggerClientAPI) {
        self.clientApi = clientApi;
    }
    
    /**
     Get texts by locale and CCAA
     - parameter ccaa: (path)
     - parameter locale: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open func getTexts(ccaa: String, locale: String? = nil, completion: @escaping ((_ data: [String:String]?,_ error: Error?) -> Void)) {
        getTextsWithRequestBuilder(ccaa: ccaa, locale: locale).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get texts by locale and CCAA
     - parameter ccaa: (path)
     - parameter locale: (query)  (optional)
     - returns: Observable<[String:String]>
     */
    open func getTexts(ccaa: String, locale: String? = nil) -> Observable<[String:String]> {
        return Observable.create { [weak self] observer -> Disposable in
            self?.getTexts(ccaa: ccaa, locale: locale) { data, error in
                if let error = error {
                    observer.on(.error(error))
                } else {
                    observer.on(.next(data!))
                }
                observer.on(.completed)
            }
            return Disposables.create()
        }
    }

    /**
     Get texts by locale and CCAA
     - GET /texts/{ccaa}

     - examples: [{contentType=application/json, example={
  "key" : ""
}}]
     - parameter ccaa: (path)
     - parameter locale: (query)  (optional)

     - returns: RequestBuilder<[String:String]>
     */
    open func getTextsWithRequestBuilder(ccaa: String, locale: String? = nil) -> RequestBuilder<[String:String]> {
        var path = "/texts/{ccaa}"
        let ccaaPreEscape = "\(ccaa)"
        let ccaaPostEscape = ccaaPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ccaa}", with: ccaaPostEscape, options: .literal, range: nil)
        let URLString = clientApi.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "locale": locale
        ])

        let requestBuilder: RequestBuilder<[String:String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
